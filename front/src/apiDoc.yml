swagger: "2.0"
info:
  description: "Contains all available API endpoints in this codebase"
  version: "1.0.0"
  title: "Bank Argent API documentation"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "kodadreda@yahoo.fr"
host: "localhost:3001"
basePath: "/api/v1"
tags:
- name: "User Accounts"
  description: "Everything about your Accounts"
schemes:
- "http"
paths:
  /user/accounts:
    get:
      tags:
      - "User Accounts"
      summary: "Finds Accounts for User"
      description: "return user's accounts"
      produces:
      - "application/json"
      parameters:
      - name: "Authorisation"
        in: "header"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
      responses:
        "200":
          description: "User Account retrieved successully"
          schema:
            $ref: "#/definitions/Accounts"
        "400":
          description: "Invalid Fields"
        "500":
          description: "Internal Server Error"
  /user/accounts/{accountId}/transactions:
    get:
      tags:
      - "User Accounts"
      summary: "Return transactions of a single account"
      description: "All the transactions of the account"
      produces:
      - "application/json"
      parameters:
      - name: "Authorisation"
        in: "header"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
      - name: "accountId"
        in: "path"
        type: "integer"
        required: true
        description: "Numeric ID of the user to get"
      responses:
        "200":
          description: "User Account retrieved successully"
          schema:
            $ref: "#/definitions/Transactions"
        "400":
          description: "Invalid Fields"
        "500":
          description: "Internal Server Error"
    post:
      tags:
      - "User Accounts"
      summary: "Post a transaction"
      description: "This can only be done by the logged in user."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorisation"
        in: "header"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
      - name: "accountId"
        in: "path"
        type: "integer"
        required: true
        description: "Numeric ID of the user to get"
      - in: "body"
        name: "body"
        description: "Created transaction"
        required: true
        schema:
          $ref: "#/definitions/PostTransaction"
      responses:
        "200":
          description: "Transaction retrieved successully"
          schema:
            $ref: "#/definitions/Transaction"
        "405":
          description: "Invalid input"
  /user/accounts/{accountId}/transactions/{transactionId}:
    get:
      tags:
      - "User Accounts"
      summary: "Return a single transaction"
      description: "get information of a single transaction"
      produces:
      - "application/json"
      parameters:
      - name: "Authorisation"
        in: "header"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
      - name: "accountId"
        in: "path"
        type: "integer"
        required: true
        description: "Numeric ID of the user to get"
      - name: "transactionId"
        in: "path"
        type: "integer"
        required: true
        description: "Numeric ID of the transaction to get"
      responses:
        "200":
          description: "User Account retrieved successully"
          schema:
            $ref: "#/definitions/SingleTransaction"
        "400":
          description: "Invalid Fields"
        "500":
          description: "Internal Server Error"
    put:
      tags:
      - "User Accounts"
      summary: "Updated transaction"
      description: "This can only be done by the logged in user."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorisation"
        in: "header"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
      - name: "accountId"
        in: "path"
        type: "integer"
        required: true
        description: "Numeric ID of the user to get"
      - in: "body"
        name: "body"
        description: "Created transaction"
        required: true
        schema:
          $ref: "#/definitions/PostTransaction"
      - name: "transactionId"
        in: "path"
        type: "integer"
        required: true
        description: "Numeric ID of the user to get"
      responses:
        "200":
          description: "User Account retrieved successully"
          schema:
            $ref: "#/definitions/SingleTransaction"
        "400":
          description: "Invalid Id supplied"
        "404":
          description: "Id not found"
    delete:
      tags:
      - "User Accounts"
      summary: "Delete transaction"
      description: "This can only be done by the logged in user."
      produces:
      - "application/json"
      parameters:
      - name: "Authorisation"
        in: "header"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
      - name: "accountId"
        in: "path"
        type: "integer"
        required: true
        description: "Numeric ID of the user to get"
      - name: "transactionId"
        in: "path"
        type: "integer"
        required: true
        description: "Numeric ID of the user to get"
      responses:
        "200":
          description: "succesly deleted"
        "400":
          description: "Invalid Id supplied"
        "404":
          description: "Id not found"
definitions:
  Accounts:
    type: "object"
    properties:
      statut:
        type: "integer"
      message:
        type: "string"
      body:
        type: "array"
        items:
          $ref: "#/definitions/Account"
  Account:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      balance:
        type: "number"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
  Transactions:
    type: "object"
    properties:
      statut:
        type: "integer"
      message:
        type: "string"
      body:
        type: "array"
        items:
          $ref: "#/definitions/Transaction"
  Transaction:
    type: "object"
    properties:
      id:
        type: "string"
      description:
        type: "string"
      amount:
        type: "number"
      balance:
        type: "number"
      notes:
        type: "string"
      type:
        $ref: "#/definitions/Transaction_type"
      category:
        $ref: "#/definitions/Transaction_category"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
  Transaction_type:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
  Transaction_category:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
  SingleTransaction:
    type: "object"
    properties:
      statut:
        type: "integer"
      message:
        type: "string"
      body:
        $ref: "#/definitions/Transaction"  
  PostTransaction:
    type: "object"
    properties:
      description:
        type: "string"
      amount:
        type: "number"
      balance:
        type: "number"
      notes:
        type: "string"
      type:
        type: "string"
      category:
        type: "string"